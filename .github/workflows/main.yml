name: Simple CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        working-directory: ./Backend
        run: npm ci

      - name: Run tests
        working-directory: ./Backend
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v2
      
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          # Guardar la clave privada SSH en un archivo
          echo "$PRIVATE_KEY" > github-ec2.pem && chmod 600 github-ec2.pem
          
          # Conectarse al servidor EC2 y ejecutar los siguientes comandos
          ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '
          
          echo "Current directory: $(pwd)"
          echo "Listing home directory:"
          ls -la ~

          # Verificar si Docker y Docker Compose están instalados
          echo "Verificando Docker..."
          if ! command -v docker &> /dev/null; then
            echo "Docker no está instalado. Instalando Docker..."
            sudo apt-get update
            sudo apt-get install -y docker.io
          else
            echo "Docker ya está instalado."
          fi

          echo "Verificando Docker Compose..."
          if ! command -v docker-compose &> /dev/null; then
            echo "Docker Compose no está instalado. Instalando Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          else
            echo "Docker Compose ya está instalado."
          fi

          # Clonar o actualizar el repositorio
          REPO_URL="https://github.com/fernandofalla/express-ci-cd-demo.git"
          BRANCH="main"
          REPO_DIR="$HOME/app"

          if [ -d "$REPO_DIR/.git" ]; then
            cd "$REPO_DIR"
            git pull origin "$BRANCH"
          else
            git clone "$REPO_URL" "$REPO_DIR"
            cd "$REPO_DIR"
          fi

          # Ejecutar Docker Compose
          echo "Ejecutando Docker Compose..."
          cd "$REPO_DIR/simple-web-server"
          docker-compose down   # Detener contenedores previos
          docker-compose up -d --build  # Construir y levantar los contenedores en segundo plano

          echo "Despliegue completado con éxito!"
          '

